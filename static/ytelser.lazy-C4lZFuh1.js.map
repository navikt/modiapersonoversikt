{"version":3,"file":"ytelser.lazy-C4lZFuh1.js","sources":["../../src/components/ytelser/List/YtelseItem.tsx","../../src/components/ytelser/List/index.tsx","../../src/components/ytelser/index.tsx","../../src/routes/new/person/ytelser.lazy.tsx"],"sourcesContent":["import { ChevronRightIcon } from '@navikt/aksel-icons';\nimport { BodyShort, Button, HStack, Heading, VStack } from '@navikt/ds-react';\nimport { getRouteApi } from '@tanstack/react-router';\nimport dayjs from 'dayjs';\nimport {} from 'nav-frontend-typografi';\nimport Card from 'src/components/Card';\nimport { getUnikYtelseKey, getYtelseIdDato } from 'src/components/ytelser/utils';\nimport type { Pleiepenger, YtelseVedtak } from 'src/generated/modiapersonoversikt-api';\nimport { YtelseVedtakYtelseType } from 'src/generated/modiapersonoversikt-api';\n\nconst routeApi = getRouteApi('/new/person/ytelser');\n\nexport const YtelseItem = ({\n    ytelse,\n    handleClick\n}: {\n    ytelse: YtelseVedtak;\n    handleClick: (id: string) => void;\n}) => {\n    const aktivYtelse = routeApi.useSearch().id;\n    const id = getUnikYtelseKey(ytelse);\n\n    const getYtelseTtile = () => {\n        switch (ytelse.ytelseType) {\n            case YtelseVedtakYtelseType.Foreldrepenger:\n                return ytelse.ytelseType;\n            case YtelseVedtakYtelseType.Sykepenger:\n                return ytelse.ytelseType;\n            case YtelseVedtakYtelseType.Pleiepenger:\n                return 'Pleiepenger sykt barn';\n            case YtelseVedtakYtelseType.Tiltakspenge:\n                return ytelse.ytelseType;\n            case YtelseVedtakYtelseType.Pensjon:\n                return ytelse.ytelseType;\n            case YtelseVedtakYtelseType.Arbeidsavklaringspenger:\n                return ytelse.ytelseType;\n            default:\n                return `Ukjent ytelse type ${ytelse.ytelseType}`;\n        }\n    };\n\n    const getBarnetFnr = (pleiepenger: Pleiepenger) => pleiepenger.barnet;\n\n    return (\n        <Card\n            padding=\"2\"\n            as=\"li\"\n            className={`cursor-pointer hover:hover:bg-ax-bg-neutral-moderate-hover group\n                ${aktivYtelse === id ? 'bg-ax-bg-neutral-moderate ' : ''}`}\n            onClick={() => handleClick(id)}\n        >\n            <HStack justify=\"space-between\" gap=\"1\" wrap={false}>\n                <VStack justify=\"center\" gap=\"1\">\n                    <Heading size=\"xsmall\" as=\"h3\" level=\"3\">\n                        {getYtelseTtile()}\n                    </Heading>\n                    <HStack gap=\"2\">\n                        <BodyShort size=\"small\" weight=\"semibold\">\n                            Dato:\n                        </BodyShort>\n                        <BodyShort size=\"small\">{dayjs(getYtelseIdDato(ytelse)).format('DD.MM.YYYY')}</BodyShort>\n                    </HStack>\n                    {ytelse.ytelseType === YtelseVedtakYtelseType.Pleiepenger && (\n                        <HStack gap=\"2\">\n                            <BodyShort size=\"small\" weight=\"semibold\">\n                                Barnets f.nr:\n                            </BodyShort>\n                            <BodyShort size=\"small\">{getBarnetFnr(ytelse.ytelseData.data as Pleiepenger)}</BodyShort>\n                        </HStack>\n                    )}\n                </VStack>\n                <Button\n                    variant=\"tertiary-neutral\"\n                    size=\"small\"\n                    name=\"Åpne\"\n                    aria-label=\"Åpne\"\n                    icon={<ChevronRightIcon className=\"translate-x-0 group-hover:translate-x-1 transition-transform\" />}\n                />\n            </HStack>\n        </Card>\n    );\n};\n","import { Alert, Heading, Skeleton, VStack } from '@navikt/ds-react';\nimport { useNavigate, useSearch } from '@tanstack/react-router';\nimport { Suspense, useCallback } from 'react';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport { PaginatedList } from 'src/components/PaginatedList';\nimport { YtelseItem } from 'src/components/ytelser/List/YtelseItem';\nimport { getUnikYtelseKey, useFilterYtelser } from 'src/components/ytelser/utils';\nimport { YtelserListFilter } from './Filter';\n\nexport const YtelserList = () => (\n    <VStack minHeight=\"0\" gap=\"2\">\n        <YtelserListFilter />\n        <ErrorBoundary boundaryName=\"YtelserList\">\n            <Suspense\n                fallback={\n                    <VStack gap=\"2\" marginInline=\"0 2\">\n                        {Array(8)\n                            .keys()\n                            .map((i) => (\n                                <Skeleton key={i} variant=\"rounded\" height={68} />\n                            ))}\n                    </VStack>\n                }\n            >\n                <YtelseList />\n            </Suspense>\n        </ErrorBoundary>\n    </VStack>\n);\n\nconst YtelseList = () => {\n    const { ytelser, placeholders } = useFilterYtelser();\n    const navigate = useNavigate({ from: '/new/person/ytelser' });\n\n    const handleClick = useCallback(\n        (id: string) => {\n            navigate({ search: { id } });\n        },\n        [navigate]\n    );\n\n    const selectedKey = useSearch({\n        from: '/new/person/ytelser',\n        select: (p) => p.id\n    });\n\n    return (\n        <>\n            {placeholders.map((placeholder) => (\n                <Alert className=\"mr-2\" variant=\"info\" key={placeholder} size=\"small\">\n                    {placeholder}\n                </Alert>\n            ))}\n            <Heading className=\"pl-1\" size=\"xsmall\" level=\"2\">\n                {ytelser.length} {ytelser.length === 1 ? 'ytelse' : 'ytelser'}\n            </Heading>\n            {ytelser.length > 0 && (\n                <PaginatedList\n                    selectedKey={selectedKey}\n                    items={ytelser}\n                    keyExtractor={getUnikYtelseKey}\n                    renderItem={({ item }) => <YtelseItem ytelse={item} handleClick={handleClick} />}\n                />\n            )}\n        </>\n    );\n};\n","import { HGrid, Heading, Skeleton, VStack } from '@navikt/ds-react';\nimport { Suspense } from 'react';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport { ValgteYtelseDetailPage } from 'src/components/ytelser/Detail';\nimport { YtelserList } from 'src/components/ytelser/List';\n\nexport const YtelserPage = () => {\n    return (\n        <ErrorBoundary boundaryName=\"YtelserList\">\n            <Suspense\n                fallback={\n                    <VStack gap=\"2\" marginInline=\"0 2\">\n                        {Array(8)\n                            .keys()\n                            .map((i) => (\n                                <Skeleton key={i} variant=\"rounded\" height={68} />\n                            ))}\n                    </VStack>\n                }\n            >\n                <HGrid\n                    gap=\"1\"\n                    columns={{ xs: 1, md: 'max-content 1fr' }}\n                    height=\"100%\"\n                    overflow={{ xs: 'scroll', md: 'hidden' }}\n                >\n                    <VStack height=\"100%\" maxWidth={{ md: '16em' }} overflow={{ md: 'hidden' }}>\n                        <Heading size=\"xsmall\">Ytelser</Heading>\n                        <YtelserList />\n                    </VStack>\n                    <VStack className=\"min-h-100 md:min-h-0\" overflow={{ xs: 'hidden', md: 'scroll' }}>\n                        <ValgteYtelseDetailPage />\n                    </VStack>\n                </HGrid>\n            </Suspense>\n        </ErrorBoundary>\n    );\n};\n","import { createLazyFileRoute } from '@tanstack/react-router';\nimport { YtelserPage } from 'src/components/ytelser';\n\nexport const Route = createLazyFileRoute('/new/person/ytelser')({\n    component: YtelserPage\n});\n"],"names":["routeApi","getRouteApi","YtelseItem","t0","$","_c","ytelse","handleClick","aktivYtelse","useSearch","id","t1","getUnikYtelseKey","t2","ytelseType","YtelseVedtakYtelseType","Foreldrepenger","Sykepenger","Pleiepenger","Tiltakspenge","Pensjon","Arbeidsavklaringspenger","getYtelseTtile","getBarnetFnr","_temp","t3","t4","t5","t6","jsx","Heading","t7","Symbol","for","BodyShort","t8","dayjs","getYtelseIdDato","format","t9","jsxs","HStack","t10","ytelseData","data","t11","VStack","t12","Button","ChevronRightIcon","t13","t14","Card","pleiepenger","barnet","YtelserList","YtelserListFilter","ErrorBoundary","Suspense","Array","keys","map","i","Skeleton","YtelseList","ytelser","placeholders","useFilterYtelser","from","navigate","useNavigate","search","select","selectedKey","_temp2","length","PaginatedList","item","Fragment","p","placeholder","Alert","YtelserPage","xs","md","HGrid","ValgteYtelseDetailPage","Route","createLazyFileRoute","component"],"mappings":"0gBAUA,MAAMA,EAAWC,EAAY,qBAAqB,EAErCC,EAAaC,GAAA,CAAA,MAAAC,EAAAC,EAAAA,EAAA,EAAA,EAAC,CAAAC,OAAAA,EAAAC,YAAAA,CAAAA,EAAAJ,EAOvBK,EAAoBR,EAAAS,UAAAA,EAAoBC,GAAI,IAAAC,EAAAP,OAAAE,GACjCK,EAAAC,EAAiBN,CAAM,EAACF,KAAAE,EAAAF,KAAAO,GAAAA,EAAAP,EAAA,CAAA,EAAnC,MAAAM,EAAWC,EAAyB,IAAAE,EAAAT,EAAA,CAAA,IAAAE,EAAAQ,YAEbD,EAAAA,IAAA,CAAA,OACXP,EAAMQ,WAAAA,CAAA,KAAAC,EAAAC,eAAA,OAECV,EAAMQ,WAAA,KAAAC,EAAAE,WAAA,OAENX,EAAMQ,WAAA,KAAAC,EAAAG,YAAA,MAEN,wBAAuB,KAAAH,EAAAI,aAAA,OAEvBb,EAAMQ,WAAA,KAAAC,EAAAK,QAAA,OAENd,EAAMQ,WAAA,KAAAC,EAAAM,wBAAA,OAENf,EAAMQ,WAAA,QAAA,MAEN,sBAAsBR,EAAMQ,UAAA,EAAa,CAAA,EAE3DV,EAAA,CAAA,EAAAE,EAAAQ,WAAAV,KAAAS,GAAAA,EAAAT,EAAA,CAAA,EAjBD,MAAAkB,EAAuBT,EAmBvBU,EAAAC,EAMmBC,EAAA;AAAA,kBACLjB,IAAgBE,EAAK,6BAA+B,EAAE,GAAE,IAAAgB,EAAAtB,EAAA,CAAA,IAAAG,GAAAH,OAAAM,GACrDgB,EAAAA,IAAMnB,EAAYG,CAAE,EAACN,KAAAG,EAAAH,KAAAM,EAAAN,KAAAsB,GAAAA,EAAAtB,EAAA,CAAA,EAAA,IAAAuB,EAAAvB,OAAAkB,GAKjBK,EAAAL,EAAAA,EAAgBlB,KAAAkB,EAAAlB,KAAAuB,GAAAA,EAAAvB,EAAA,CAAA,EAAA,IAAAwB,EAAAxB,OAAAuB,GADrBC,EAAAC,EAAAA,IAACC,GAAa,KAAA,SAAY,GAAA,KAAW,MAAA,IAChCH,SAAAA,CAAAA,CACL,EAAUvB,KAAAuB,EAAAvB,MAAAwB,GAAAA,EAAAxB,EAAA,EAAA,EAAA,IAAA2B,EAAA3B,EAAA,EAAA,IAAA4B,OAAAC,IAAA,2BAAA,GAENF,QAACG,EAAA,CAAe,KAAA,QAAe,OAAA,WAAW,SAAA,QAE1C,EAAY9B,MAAA2B,GAAAA,EAAA3B,EAAA,EAAA,EAAA,IAAA+B,EAAA/B,QAAAE,GACa6B,EAAAC,EAAMC,EAAgB/B,CAAM,CAAC,EAACgC,OAAQ,YAAY,EAAClC,MAAAE,EAAAF,MAAA+B,GAAAA,EAAA/B,EAAA,EAAA,EAAA,IAAAmC,EAAAnC,QAAA+B,GAJhFI,EAAAC,EAAAA,KAACC,EAAA,CAAW,IAAA,IACRV,SAAAA,CAAAA,EAGAF,EAAAA,IAACK,EAAA,CAAe,KAAA,QAASC,SAAAA,CAAAA,CAAoD,CAAA,EACjF,EAAS/B,MAAA+B,EAAA/B,MAAAmC,GAAAA,EAAAnC,EAAA,EAAA,EAAA,IAAAsC,EAAAtC,EAAA,EAAA,IAAAE,EAAAqC,YAAAvC,EAAA,EAAA,IAAAE,EAAAQ,YACR4B,EAAApC,EAAMQ,aAAAC,EAAAG,aACHsB,OAACC,EAAA,CAAW,IAAA,IACR,SAAA,CAAAZ,MAACK,EAAA,CAAe,KAAA,QAAe,OAAA,WAAW,SAAA,gBAE1C,EACAL,MAACK,GAAe,KAAA,QAASX,WAAajB,EAAMqC,WAAAC,IAA+B,CAAA,CAAE,CAAA,EACjF,EACHxC,EAAA,EAAA,EAAAE,EAAAqC,WAAAvC,EAAA,EAAA,EAAAE,EAAAQ,WAAAV,MAAAsC,GAAAA,EAAAtC,EAAA,EAAA,EAAA,IAAAyC,EAAAzC,EAAA,EAAA,IAAAsC,GAAAtC,QAAAwB,GAAAxB,EAAA,EAAA,IAAAmC,GAjBLM,EAAAL,EAAAA,KAACM,EAAA,CAAe,QAAA,SAAa,IAAA,IACzBlB,SAAAA,CAAAA,EAGAW,EAMCG,CAAAA,EAQL,EAAStC,MAAAsC,EAAAtC,MAAAwB,EAAAxB,MAAAmC,EAAAnC,MAAAyC,GAAAA,EAAAzC,EAAA,EAAA,EAAA,IAAA2C,EAAA3C,EAAA,EAAA,IAAA4B,OAAAC,IAAA,2BAAA,GACTc,EAAAlB,EAAAA,IAACmB,EAAA,CACW,QAAA,mBACH,KAAA,QACA,KAAA,OACM,aAAA,OACL,KAAAnB,MAACoB,EAAA,CAA2B,UAAA,+DAA8D,EAAG,EACrG7C,MAAA2C,GAAAA,EAAA3C,EAAA,EAAA,EAAA,IAAA8C,EAAA9C,QAAAyC,GA1BNK,SAACT,EAAA,CAAe,QAAA,gBAAoB,IAAA,IAAU,KAAA,GAC1CI,SAAAA,CAAAA,EAmBAE,CAAAA,EAOJ,EAAS3C,MAAAyC,EAAAzC,MAAA8C,GAAAA,EAAA9C,EAAA,EAAA,EAAA,IAAA+C,EAAA,OAAA/C,EAAA,EAAA,IAAA8C,GAAA9C,QAAAqB,GAAArB,EAAA,EAAA,IAAAsB,GAlCbyB,EAAAtB,EAAAA,IAACuB,EAAA,CACW,QAAA,IACL,GAAA,KACQ,UAAA3B,EAEF,QAAAC,EAETwB,SAAAA,CAAAA,CA4BJ,EAAO9C,MAAA8C,EAAA9C,MAAAqB,EAAArB,MAAAsB,EAAAtB,MAAA+C,GAAAA,EAAA/C,EAAA,EAAA,EAnCP+C,CAmCO,EAnEW,SAAA3B,EAAA6B,EAAA,CAAA,OA6B6BA,EAAWC,MAAA,CChC3D,MAAMC,EAAcA,IACvBf,EAAAA,KAACM,GAAO,UAAU,IAAI,IAAI,IACtB,SAAA,CAAAjB,EAAAA,IAAC2B,EAAA,EAAiB,EAClB3B,MAAC4B,EAAA,CAAc,aAAa,cACxB,eAACC,EAAAA,SAAA,CACG,SACI7B,EAAAA,IAACiB,EAAA,CAAO,IAAI,IAAI,aAAa,MACxBa,eAAM,CAAC,EACHC,KAAAA,EACAC,IAAKC,GACFjC,EAAAA,IAACkC,EAAA,CAAiB,QAAQ,UAAU,OAAQ,EAAA,EAA7BD,EAClB,CAAA,CACT,EAGJ,SAAAjC,EAAAA,IAACmC,EAAA,CAAA,CAAU,EACf,CAAA,CACJ,CAAA,EACJ,EAGEA,EAAaA,IAAA,CAAA,MAAA5D,EAAAC,EAAAA,EAAA,EAAA,EACf,CAAA4D,QAAAA,EAAAC,aAAAA,CAAAA,EAAkCC,EAAAA,EAAmB,IAAAhE,EAAAC,EAAA,CAAA,IAAA4B,OAAAC,IAAA,2BAAA,GACxB9B,EAAA,CAAAiE,KAAQ,qBAAA,EAAuBhE,KAAAD,GAAAA,EAAAC,EAAA,CAAA,EAA5D,MAAAiE,EAAiBC,EAAYnE,CAA+B,EAAE,IAAAQ,EAAAP,OAAAiE,GAG1D1D,EAAAD,GAAA,CACI2D,EAAQ,CAAAE,OAAA,CAAA7D,GAAAA,CAAAA,CAAA,CAAmB,CAAC,EAC/BN,KAAAiE,EAAAjE,KAAAO,GAAAA,EAAAP,EAAA,CAAA,EAHL,MAAAG,EAAoBI,EAKlB,IAAAE,EAAAT,EAAA,CAAA,IAAA4B,OAAAC,IAAA,2BAAA,GAE4BpB,EAAA,CAAAuD,KACpB,sBAAqBI,OAAAhD,CAAAA,EAE9BpB,KAAAS,GAAAA,EAAAT,EAAA,CAAA,EAHD,MAAAqE,EAAoBhE,EAAUI,CAG7B,EAAE,IAAAY,EAAArB,OAAA8D,GAIMzC,EAAAyC,EAAYL,IAAAa,EAIZ,EAACtE,KAAA8D,EAAA9D,KAAAqB,GAAAA,EAAArB,EAAA,CAAA,EAEoB,MAAAsB,EAAAuC,EAAOU,SAAA,EAAgB,SAAW,UAAS,IAAAhD,EAAAvB,OAAAsB,GAAAtB,EAAA,CAAA,IAAA6D,EAAAU,QADjEhD,SAACG,EAAA,CAAkB,UAAA,OAAY,KAAA,SAAe,MAAA,IACzCmC,SAAAA,CAAAA,EAAOU,OAAQ,IAAEjD,CAAAA,EACtB,EAAUtB,KAAAsB,EAAAtB,EAAA,CAAA,EAAA6D,EAAAU,OAAAvE,KAAAuB,GAAAA,EAAAvB,EAAA,CAAA,EAAA,IAAAwB,EAAAxB,EAAA,CAAA,IAAAG,GAAAH,QAAAqE,GAAArE,EAAA,EAAA,IAAA6D,GACTrC,EAAAqC,EAAOU,OAAA,GACJ9C,EAAAA,IAAC+C,EAAA,CACgBH,YAAAA,EACNR,MAAAA,EACOrD,aAAAA,EACF,WAAAmB,GAAA,CAAC,KAAA,CAAA8C,KAAAA,CAAAA,EAAA9C,EAAQ,OAAKF,EAAAA,IAAC3B,EAAA,CAAmB2E,OAAAA,EAAmBtE,YAAAA,CAAAA,CAAW,CAAI,EAAA,EAEvFH,KAAAG,EAAAH,MAAAqE,EAAArE,MAAA6D,EAAA7D,MAAAwB,GAAAA,EAAAxB,EAAA,EAAA,EAAA,IAAA2B,EAAA,OAAA3B,EAAA,EAAA,IAAAqB,GAAArB,QAAAuB,GAAAvB,EAAA,EAAA,IAAAwB,GAhBLG,EAAAS,EAAAA,KAAAsC,WAAA,CACKrD,SAAAA,CAAAA,EAKDE,EAGCC,CAAAA,EAOA,EACFxB,MAAAqB,EAAArB,MAAAuB,EAAAvB,MAAAwB,EAAAxB,MAAA2B,GAAAA,EAAA3B,EAAA,EAAA,EAjBH2B,CAiBG,EAlCQ,SAAAP,EAAAuD,EAAA,CAAA,OAaIA,EAACrE,EAAA,CAbL,SAAAgE,GAAAM,EAAA,CAAA,OAmBHnD,EAAAA,IAACoD,GAAgB,UAAA,OAAe,QAAA,OAA8B,KAAA,QACzDD,SAAAA,CAAAA,EADuCA,CAE5C,CAAQ,CC7CjB,MAAME,GAAcA,IAAA,CAAA,MAAA9E,EAAAC,EAAAA,EAAA,CAAA,EAAA,IAAAF,EAAAC,EAAA,CAAA,IAAA4B,OAAAC,IAAA,2BAAA,GAKP9B,EAAA0B,EAAAA,IAACiB,EAAA,CAAW,IAAA,IAAiB,aAAA,MACxBa,SAAAA,OAAO,EAACC,KAAAA,EACEC,IAAArC,EAGN,EACT,EAASpB,KAAAD,GAAAA,EAAAC,EAAA,CAAA,EAAA,IAAAO,EAAAP,EAAA,CAAA,IAAA4B,OAAAC,IAAA,2BAAA,GAKAtB,EAAA,CAAAwE,GAAA,EAAAC,GAAa,iBAAA,EAAmBhF,KAAAO,GAAAA,EAAAP,EAAA,CAAA,EAAA,IAAAS,EAAAT,EAAA,CAAA,IAAA4B,OAAAC,IAAA,2BAAA,GAE/BpB,EAAA,CAAAsE,GAAM,SAAQC,GAAM,QAAA,EAAUhF,KAAAS,GAAAA,EAAAT,EAAA,CAAA,EAAA,IAAAqB,EAAArB,EAAA,CAAA,IAAA4B,OAAAC,IAAA,2BAAA,GAExCR,EAAAe,EAAAA,KAACM,EAAA,CAAc,OAAA,OAAiB,SAAA,CAAAsC,GAAM,MAAA,EAAoB,SAAA,CAAAA,GAAM,QAAA,EAC5D,SAAA,CAAAvD,EAAAA,IAACC,EAAA,CAAa,KAAA,SAAS,SAAA,UAAO,QAC7ByB,EAAA,CAAA,CAAW,CAAA,EAChB,EAASnD,KAAAqB,GAAAA,EAAArB,EAAA,CAAA,EAAA,IAAAsB,EAAA,OAAAtB,EAAA,CAAA,IAAA4B,OAAAC,IAAA,2BAAA,GArBrBP,QAAC+B,EAAA,CAA2B,aAAA,cACxB,SAAA5B,MAAC6B,EAAAA,UAEO,SAAAvD,EASJ,SAAAqC,EAAAA,KAAC6C,EAAA,CACO,IAAA,IACK,QAAA1E,EACF,OAAA,OACG,SAAAE,EAEVY,SAAAA,CAAAA,EAIAI,EAAAA,IAACiB,EAAA,CAAiB,UAAA,uBAAiC,SAAA,CAAAqC,GAAM,SAAQC,GAAM,QAAA,EACnE,SAAAvD,EAAAA,IAACyD,EAAA,CAAA,CAAsB,CAAA,CAC3B,CAAA,CAAA,CACJ,EACJ,EACJ,EAAgBlF,KAAAsB,GAAAA,EAAAtB,EAAA,CAAA,EA3BhBsB,CA2BgB,EA7BG,SAAAF,GAAAsC,EAAA,CAAA,aASMC,EAAA,CAAyB,QAAA,UAAkB,OAAA,KAAE,CAAI,CCZ3E,MAAMwB,GAAQC,EAAoB,qBAAqB,EAAE,CAC5DC,UAAWP,EACf,CAAC"}