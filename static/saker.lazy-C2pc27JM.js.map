{"version":3,"file":"saker.lazy-C2pc27JM.js","sources":["../../node_modules/.pnpm/@navikt+aksel-icons@7.25.1/node_modules/@navikt/aksel-icons/dist/react/esm/CircleSlash.js","../../src/components/saker/List/SakItem.tsx","../../src/components/saker/List/index.tsx","../../src/components/saker/index.tsx","../../src/routes/new/person/saker.lazy.tsx"],"sourcesContent":["\"use client\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nimport { useId } from \"./util/useId.js\";\nconst SvgCircleSlash = forwardRef((_a, ref) => {\n    var { title, titleId: _titleId } = _a, props = __rest(_a, [\"title\", \"titleId\"]);\n    let titleId = useId();\n    titleId = title ? _titleId ? _titleId : \"title-\" + titleId : undefined;\n    return React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", width: \"1em\", height: \"1em\", fill: \"none\", viewBox: \"0 0 24 24\", focusable: false, role: \"img\", ref: ref, \"aria-labelledby\": titleId }, props),\n        title ? React.createElement(\"title\", { id: titleId }, title) : null,\n        React.createElement(\"path\", { fill: \"currentColor\", fillRule: \"evenodd\", d: \"M5.098 5.114A9.72 9.72 0 0 0 2.25 12c0 5.385 4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75S17.385 2.25 12 2.25a9.72 9.72 0 0 0-6.886 2.848l-.008.008zm1.623.546a8.25 8.25 0 0 1 11.62 11.62zM5.66 6.72l11.62 11.62A8.25 8.25 0 0 1 5.66 6.72\", clipRule: \"evenodd\" }));\n});\nexport default SvgCircleSlash;\n//# sourceMappingURL=CircleSlash.js.map","import { ChevronRightIcon, CircleSlashIcon } from '@navikt/aksel-icons';\nimport { BodyShort, Button, HStack, Heading, VStack } from '@navikt/ds-react';\nimport { getRouteApi } from '@tanstack/react-router';\nimport Card from 'src/components/Card';\nimport { getSakId } from 'src/components/saker/utils';\nimport type { SaksDokumenter } from 'src/generated/modiapersonoversikt-api';\nimport { formatterDato } from 'src/utils/date-utils';\n\nconst routeApi = getRouteApi('/new/person/saker');\n\nexport const SakItem = ({\n    sak,\n    handleClick\n}: {\n    sak: SaksDokumenter;\n    handleClick: (id: string) => void;\n}) => {\n    const aktivSakId = routeApi.useSearch().id;\n    const id = getSakId(sak);\n    return (\n        <Card\n            padding=\"2\"\n            className={`cursor-pointer hover:hover:bg-ax-bg-neutral-moderate-hover group\n                ${aktivSakId === id ? 'bg-ax-bg-neutral-moderate ' : ''}`}\n            onClick={() => handleClick(id)}\n        >\n            <HStack justify=\"space-between\" gap=\"1\" wrap={false}>\n                <VStack justify=\"center\" gap=\"1\">\n                    <Heading size=\"xsmall\" as=\"h3\" level=\"3\">\n                        {sak.temanavn}\n                    </Heading>\n                    <HStack gap=\"2\">\n                        <BodyShort size=\"small\" weight=\"semibold\">\n                            SakID:\n                        </BodyShort>\n                        <BodyShort size=\"small\">{sak.fagsaksnummer}</BodyShort>\n                    </HStack>\n                    <HStack gap=\"2\">\n                        <BodyShort size=\"small\" weight=\"semibold\">\n                            Opprettet:\n                        </BodyShort>\n                        <BodyShort size=\"small\">{sak.opprettet ? formatterDato(sak.opprettet) : ''}</BodyShort>\n                    </HStack>\n                    <HStack gap=\"2\">\n                        <BodyShort size=\"small\" weight=\"semibold\">\n                            Status:\n                        </BodyShort>\n                        <BodyShort size=\"small\">\n                            {sak.avsluttet ? `Avsluttet(${formatterDato(sak.avsluttet)})` : 'Åpen'}\n                        </BodyShort>\n                    </HStack>\n                </VStack>\n                {sak.harTilgang ? (\n                    <Button\n                        variant=\"tertiary-neutral\"\n                        size=\"small\"\n                        name=\"Åpne\"\n                        aria-label=\"Åpne\"\n                        icon={\n                            <ChevronRightIcon className=\"translate-x-0 group-hover:translate-x-1 transition-transform\" />\n                        }\n                    />\n                ) : (\n                    <div className=\"h-4\">\n                        <CircleSlashIcon title=\"Du har ikke tema tilgang\" fontSize=\"1rem\" />\n                    </div>\n                )}\n            </HStack>\n        </Card>\n    );\n};\n","import { Heading, Skeleton, VStack } from '@navikt/ds-react';\nimport { useNavigate, useSearch } from '@tanstack/react-router';\nimport { Suspense, useCallback } from 'react';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport { PaginatedList } from 'src/components/PaginatedList';\nimport { SakItem } from 'src/components/saker/List/SakItem';\nimport { getSakId, useFilterSaker } from '../utils';\nimport { SakerFilter } from './Filter';\n\nexport const SakerList = () => (\n    <ErrorBoundary boundaryName=\"sakerList\">\n        <Suspense\n            fallback={\n                <VStack gap=\"2\" marginInline=\"0 2\">\n                    {Array(8)\n                        .keys()\n                        .map((i) => (\n                            <Skeleton key={i} variant=\"rounded\" height={68} />\n                        ))}\n                </VStack>\n            }\n        >\n            <VStack minHeight=\"0\" gap=\"2\">\n                <SakerFilter />\n                <SakList />\n            </VStack>\n        </Suspense>\n    </ErrorBoundary>\n);\n\nconst SakList = () => {\n    const saker = useFilterSaker();\n    const navigate = useNavigate({ from: '/new/person/saker' });\n\n    const handleClick = useCallback(\n        (id: string) => {\n            navigate({ search: { id } });\n        },\n        [navigate]\n    );\n\n    const selectedKey = useSearch({\n        from: '/new/person/saker',\n        select: (p) => p.id\n    });\n\n    return (\n        <>\n            <Heading className=\"pl-1\" size=\"xsmall\" level=\"2\">\n                {saker.length} {saker.length === 1 ? 'sak' : 'saker'} funnet\n            </Heading>\n            {saker.length > 0 && (\n                <PaginatedList\n                    selectedKey={selectedKey}\n                    items={saker}\n                    keyExtractor={getSakId}\n                    renderItem={({ item }) => <SakItem sak={item} handleClick={handleClick} />}\n                />\n            )}\n        </>\n    );\n};\n","import { HGrid, Heading, VStack } from '@navikt/ds-react';\nimport { SakDetailPage } from 'src/components/saker/Detail';\nimport { SakerList } from 'src/components/saker/List';\n\nexport const SakerPage = () => {\n    return (\n        <HGrid\n            gap=\"1\"\n            columns={{ xs: 1, md: 'max-content 1fr' }}\n            height=\"100%\"\n            overflow={{ xs: 'scroll', md: 'hidden' }}\n        >\n            <VStack height=\"100%\" maxWidth={{ md: '16em' }} overflow={{ md: 'hidden' }}>\n                <Heading size=\"xsmall\">Saker og dokumenter</Heading>\n                <SakerList />\n            </VStack>\n            <VStack overflow={{ xs: 'hidden', md: 'scroll' }} className=\"min-h-100 md:min-h-0\">\n                <SakDetailPage />\n            </VStack>\n        </HGrid>\n    );\n};\n","import { createLazyFileRoute } from '@tanstack/react-router';\nimport { SakerPage } from 'src/components/saker';\n\nexport const Route = createLazyFileRoute('/new/person/saker')({\n    component: SakerPage\n});\n"],"names":["__rest","s","t","p","i","SvgCircleSlash","forwardRef","_a","ref","title","_titleId","props","titleId","useId","React.createElement","routeApi","getRouteApi","SakItem","t0","$","_c","sak","handleClick","aktivSakId","useSearch","id","t1","getSakId","t2","t3","t4","temanavn","jsx","Heading","t5","Symbol","for","BodyShort","t6","fagsaksnummer","jsxs","HStack","t7","t8","opprettet","formatterDato","t9","t10","t11","avsluttet","t12","t13","VStack","t14","harTilgang","Button","ChevronRightIcon","CircleSlashIcon","t15","t16","Card","SakerList","ErrorBoundary","Suspense","Array","keys","map","Skeleton","SakerFilter","SakList","saker","useFilterSaker","from","navigate","useNavigate","search","select","_temp","selectedKey","length","PaginatedList","item","SakerPage","xs","md","HGrid","SakDetailPage","Route","createLazyFileRoute","component"],"mappings":"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","x_google_ignoreList":[0]}